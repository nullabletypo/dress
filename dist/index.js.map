{"version":3,"file":"index.js","sources":["../src/compile.ts","../src/index.ts"],"sourcesContent":["const REFS = /&/g\n\nconst BREAKPOINTS = /(;|{|}|\\*\\/)(?!\\n)/g\n\nexport const split = (s: string) => s.replace(BREAKPOINTS, '$&' + '\\n').split('\\n')\n\nexport const reduce = (id: string, rows: string[]) => {\n  let acc = ''\n  let buf = ''\n\n  const preform = (line: string) => line.trim().replace(REFS, id)\n\n  const commit = (line: string) => {\n    acc += (buf.length > 0 ? `${id}{${buf}}` : '') + line\n    buf = ''\n  }\n\n  for (let i = 0; i < rows.length; i++) {\n    let line = preform(rows[i])\n    // empty line\n    if (line === '') {\n      continue\n    }\n    // open brace\n    else if (line.endsWith('{')) {\n      // open at-rule\n      if (line.startsWith('@')) {\n        commit(line)\n      }\n      // open puseudo\n      else {\n        commit(line)\n        // accumulate until close puseudo\n        for (i = i + 1; i < rows.length; i++) {\n          acc += line = preform(rows[i])\n          if (line.endsWith('}')) {\n            break\n          }\n        }\n      }\n    }\n    // close brace\n    else if (line.endsWith('}')) {\n      // close at-rule\n      commit(line)\n    }\n    // open comment\n    else if (line.startsWith('/*')) {\n      commit(line)\n      // close comment\n      if (!line.endsWith('*/')) {\n        // accumulate until close comment\n        for (i = i + 1; i < rows.length; i++) {\n          acc += line = preform(rows[i])\n          if (line.endsWith('*/')) {\n            break\n          }\n        }\n      }\n    }\n    // buffer\n    else {\n      buf += line\n    }\n  }\n  commit('')\n  return acc\n}\n\nexport const compile = (id: string, template: string) => reduce(id, split(template))\n","import { compile as _compile } from './compile'\nimport hash from '@emotion/hash'\n\nexport interface DressOptions {\n  prefix: string\n  compile: (id: string, template: string) => string\n}\n\nexport default (option: Partial<DressOptions> = {}) => {\n  const compile = option.compile || _compile\n  const prefix = option.prefix || 'dress'\n  const cache: { [key: string]: string } = {} // {template: id}\n  let cssText = ''\n\n  const css = (strings: TemplateStringsArray, ...values: any[]) => {\n    const template = String.raw(strings, ...values)\n    let id = cache[template]\n    if (id === undefined) {\n      id = cache[template] = prefix + '-' + hash(template)\n      cssText += compile('.' + id, template)\n    }\n    return id\n  }\n\n  const keyframes = (string: TemplateStringsArray, ...values: any[]) => {\n    const template = String.raw(string, ...values)\n    let id = cache[template]\n    if (id === undefined) {\n      id = cache[template] = prefix + '-' + hash(template)\n      cssText += `@keyframes ${id}{${template.replace(/\\s+/g, ' ')}}`\n    }\n    return id\n  }\n\n  const extract = () => cssText\n\n  return { css, keyframes, extract }\n}\n"],"names":["const","REFS","BREAKPOINTS","split","s","replace","reduce","id","rows","acc","buf","preform","line","trim","commit","length","let","i","endsWith","startsWith","compile","template","option","_compile","prefix","cache","cssText","css","strings","String","raw","values","undefined","hash","keyframes","string","extract"],"mappings":";;;;AAAAA,IAAMC,IAAI,GAAG,IAAb;AAEAD,IAAME,WAAW,GAAG,qBAApB;AAEA,AAAOF,IAAMG,KAAK,aAAIC,YAAcA,CAAC,CAACC,OAAF,CAAUH,WAAV,EAAuB,OAAO,IAA9B,EAAoCC,KAApC,CAA0C,IAA1C,IAA7B;AAEP,AAAOH,IAAMM,MAAM,aAAIC,EAAD,EAAaC,IAAb;MAChBC,GAAG,GAAG,EAAV;MACIC,GAAG,GAAG,EAAV;;MAEMC,OAAO,aAAIC,eAAiBA,IAAI,CAACC,IAAL,GAAYR,OAAZ,CAAoBJ,IAApB,EAA0BM,EAA1B,IAAlC;;MAEMO,MAAM,aAAIF;IACdH,GAAG,IAAI,CAACC,GAAG,CAACK,MAAJ,GAAa,CAAb,IAAoBR,WAAMG,aAAS,EAApC,IAA0CE,IAAjD;IACAF,GAAG,GAAG,EAAN;GAFF;;OAKKM,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAAI,CAACO,MAAzB,EAAiCE,CAAC,EAAlC,EAAsC;QAChCL,IAAI,GAAGD,OAAO,CAACH,IAAI,CAACS,CAAD,CAAL,CAAlB,CADoC;;QAGhCL,IAAI,KAAK,EAAb,EAAiB;;KAAjB;SAIK,IAAIA,IAAI,CAACM,QAAL,CAAc,GAAd,CAAJ,EAAwB;;YAEvBN,IAAI,CAACO,UAAL,CAAgB,GAAhB,CAAJ,EAA0B;UACxBL,MAAM,CAACF,IAAD,CAAN;SADF;aAIK;YACHE,MAAM,CAACF,IAAD,CAAN,CADG;;iBAGEK,CAAC,GAAGA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAAI,CAACO,MAAzB,EAAiCE,CAAC,EAAlC,EAAsC;cACpCR,GAAG,IAAIG,IAAI,GAAGD,OAAO,CAACH,IAAI,CAACS,CAAD,CAAL,CAArB;;kBACIL,IAAI,CAACM,QAAL,CAAc,GAAd,CAAJ,EAAwB;;;;;OAXzB;WAkBA,IAAIN,IAAI,CAACM,QAAL,CAAc,GAAd,CAAJ,EAAwB;;UAE3BJ,MAAM,CAACF,IAAD,CAAN;SAFG;aAKA,IAAIA,IAAI,CAACO,UAAL,CAAgB,IAAhB,CAAJ,EAA2B;YAC9BL,MAAM,CAACF,IAAD,CAAN,CAD8B;;gBAG1B,CAACA,IAAI,CAACM,QAAL,CAAc,IAAd,CAAL,EAA0B;;mBAEnBD,CAAC,GAAGA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAAI,CAACO,MAAzB,EAAiCE,CAAC,EAAlC,EAAsC;gBACpCR,GAAG,IAAIG,IAAI,GAAGD,OAAO,CAACH,IAAI,CAACS,CAAD,CAAL,CAArB;;oBACIL,IAAI,CAACM,QAAL,CAAc,IAAd,CAAJ,EAAyB;;;;;WAP1B;eAcA;cACHR,GAAG,IAAIE,IAAP;;;;EAGJE,MAAM,CAAC,EAAD,CAAN;SACOL,GAAP;CA5DK;AA+DP,AAAOT,IAAMoB,OAAO,aAAIb,EAAD,EAAac,QAAb,WAAkCf,MAAM,CAACC,EAAD,EAAKJ,KAAK,CAACkB,QAAD,CAAV,IAAxD;;AC7DP,uBAAgBC,MAAD;oCAAiC;;MACxCF,UAAO,GAAGE,MAAM,CAACF,OAAP,IAAkBG,OAAlC;MACMC,MAAM,GAAGF,MAAM,CAACE,MAAP,IAAiB,OAAhC;MACMC,KAAK,GAA8B,EAAzC;;MACIC,OAAO,GAAG,EAAd;;MAEMC,GAAG,aAAIC,OAAD;;;;QACJP,QAAQ,GAAGQ,MAAM,CAACC,SAAP,WAAWF,OAAX,WAAuBG,QAAvB,CAAjB;QACIxB,EAAE,GAAGkB,KAAK,CAACJ,QAAD,CAAd;;QACId,EAAE,KAAKyB,SAAX,EAAsB;MACpBzB,EAAE,GAAGkB,KAAK,CAACJ,QAAD,CAAL,GAAkBG,MAAM,GAAG,GAAT,GAAeS,IAAI,CAACZ,QAAD,CAA1C;MACAK,OAAO,IAAIN,UAAO,CAAC,MAAMb,EAAP,EAAWc,QAAX,CAAlB;;;WAEKd,EAAP;GAPF;;MAUM2B,SAAS,aAAIC,MAAD;;;;QACVd,QAAQ,GAAGQ,MAAM,CAACC,SAAP,WAAWK,MAAX,WAAsBJ,QAAtB,CAAjB;QACIxB,EAAE,GAAGkB,KAAK,CAACJ,QAAD,CAAd;;QACId,EAAE,KAAKyB,SAAX,EAAsB;MACpBzB,EAAE,GAAGkB,KAAK,CAACJ,QAAD,CAAL,GAAkBG,MAAM,GAAG,GAAT,GAAeS,IAAI,CAACZ,QAAD,CAA1C;MACAK,OAAO,oBAAkBnB,YAAMc,QAAQ,CAAChB,OAAT,CAAiB,MAAjB,EAAyB,GAAzB,QAA/B;;;WAEKE,EAAP;GAPF;;MAUM6B,OAAO,wBAASV,UAAtB;;SAEO;SAAEC,GAAF;eAAOO,SAAP;aAAkBE;GAAzB;CA5BF;;;;"}