{"version":3,"file":"index.min.js","sources":["../src/compile.ts","../src/index.ts"],"sourcesContent":["const REFS = /&/g\n\nconst BREAKPOINTS = /(;|{|}|\\*\\/)(?!\\n)/g\n\nexport const split = (s: string) => s.replace(BREAKPOINTS, '$&' + '\\n').split('\\n')\n\nexport const reduce = (id: string, rows: string[]) => {\n  let acc = ''\n  let buf = ''\n\n  const preform = (line: string) => line.trim().replace(REFS, id)\n\n  const commit = (line: string) => {\n    acc += (buf.length > 0 ? `${id}{${buf}}` : '') + line\n    buf = ''\n  }\n\n  for (let i = 0; i < rows.length; i++) {\n    let line = preform(rows[i])\n    // empty line\n    if (line === '') {\n      continue\n    }\n    // open brace\n    else if (line.endsWith('{')) {\n      // open at-rule\n      if (line.startsWith('@')) {\n        commit(line)\n      }\n      // open puseudo\n      else {\n        commit(line)\n        // accumulate until close puseudo\n        for (i = i + 1; i < rows.length; i++) {\n          acc += line = preform(rows[i])\n          if (line.endsWith('}')) {\n            break\n          }\n        }\n      }\n    }\n    // close brace\n    else if (line.endsWith('}')) {\n      // close at-rule\n      commit(line)\n    }\n    // open comment\n    else if (line.startsWith('/*')) {\n      commit(line)\n      // close comment\n      if (!line.endsWith('*/')) {\n        // accumulate until close comment\n        for (i = i + 1; i < rows.length; i++) {\n          acc += line = preform(rows[i])\n          if (line.endsWith('*/')) {\n            break\n          }\n        }\n      }\n    }\n    // buffer\n    else {\n      buf += line\n    }\n  }\n  commit('')\n  return acc\n}\n\nexport const compile = (id: string, template: string) => reduce(id, split(template))\n","import { compile as _compile } from './compile'\nimport hash from '@emotion/hash'\n\nexport interface DressOptions {\n  prefix: string\n  compile: (id: string, template: string) => string\n}\n\nexport default (option: Partial<DressOptions> = {}) => {\n  const compile = option.compile || _compile\n  const prefix = option.prefix || 'dress'\n  const cache: { [key: string]: string } = {} // {template: id}\n  let cssText = ''\n\n  const css = (strings: TemplateStringsArray, ...values: any[]) => {\n    const template = String.raw(strings, ...values)\n    let id = cache[template]\n    if (id === undefined) {\n      id = cache[template] = prefix + '-' + hash(template)\n      cssText += compile('.' + id, template)\n    }\n    return id\n  }\n\n  const keyframes = (string: TemplateStringsArray, ...values: any[]) => {\n    const template = String.raw(string, ...values)\n    let id = cache[template]\n    if (id === undefined) {\n      id = cache[template] = prefix + '-' + hash(template)\n      cssText += `@keyframes ${id}{${template.replace(/\\s+/g, ' ')}}`\n    }\n    return id\n  }\n\n  const extract = () => cssText\n\n  return { css, keyframes, extract }\n}\n"],"names":["REFS","BREAKPOINTS","compile","id","template","rows","acc","buf","preform","line","trim","replace","commit","length","i","endsWith","startsWith","reduce","split","option","_compile","prefix","cache","cssText","strings","String","raw","values","undefined","hash","string"],"mappings":"oFAAMA,EAAO,KAEPC,EAAc,sBAmEPC,WAAWC,EAAYC,mBA/DbD,EAAYE,WAC7BC,EAAM,GACNC,EAAM,GAEJC,WAAWC,UAAiBA,EAAKC,OAAOC,QAAQX,EAAMG,IAEtDS,WAAUH,GACdH,IAAQC,EAAIM,OAAS,EAAOV,MAAMI,MAAS,IAAME,EACjDF,EAAM,IAGCO,EAAI,EAAGA,EAAIT,EAAKQ,OAAQC,IAAK,KAChCL,EAAOD,EAAQH,EAAKS,OAEX,KAATL,EAIC,GAAIA,EAAKM,SAAS,QAEjBN,EAAKO,WAAW,KAClBJ,EAAOH,YAIPG,EAAOH,GAEFK,GAAQ,EAAGA,EAAIT,EAAKQ,SACvBP,GAAOG,EAAOD,EAAQH,EAAKS,KACvBL,EAAKM,SAAS,MAFaD,UAShC,GAAIL,EAAKM,SAAS,KAErBH,EAAOH,QAGJ,GAAIA,EAAKO,WAAW,UACvBJ,EAAOH,IAEFA,EAAKM,SAAS,UAEZD,GAAQ,EAAGA,EAAIT,EAAKQ,SACvBP,GAAOG,EAAOD,EAAQH,EAAKS,KACvBL,EAAKM,SAAS,OAFaD,WAUnCP,GAAOE,SAGXG,EAAO,IACAN,EAGgDW,CAAOd,EAAUC,EAjEpCO,QAAQV,EAAa,QAAaiB,MAAM,gCCI9DC,kBAAgC,QACxCjB,EAAUiB,EAAOjB,SAAWkB,EAC5BC,EAASF,EAAOE,QAAU,QAC1BC,EAAmC,GACrCC,EAAU,SAwBP,cAtBMC,qEACLpB,EAAWqB,OAAOC,kBAAIF,UAAYG,IACpCxB,EAAKmB,EAAMlB,eACJwB,IAAPzB,IACFA,EAAKmB,EAAMlB,GAAYiB,EAAS,IAAMQ,EAAKzB,GAC3CmB,GAAWrB,EAAQ,IAAMC,EAAIC,IAExBD,sBAGU2B,qEACX1B,EAAWqB,OAAOC,kBAAII,UAAWH,IACnCxB,EAAKmB,EAAMlB,eACJwB,IAAPzB,IACFA,EAAKmB,EAAMlB,GAAYiB,EAAS,IAAMQ,EAAKzB,GAC3CmB,iBAAyBpB,MAAMC,EAASO,QAAQ,OAAQ,UAEnDR,6BAGaoB"}